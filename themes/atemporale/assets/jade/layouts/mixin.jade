//- As you may know, Laravel 5 provides the Elixir to compile assets with no pain.
  These mixins is for those of you who want to use Jade power combined with that of Laravel Blade.
  The syntax mimic Blade statements, however identation differs in some cases.
- var newline = "\r\n"
- var loopIterator = '$iterator'


//- twig info layout
  Example:  +infolayout('custom description')
  Compiled: description = custom description
            ==
mixin infofile(desc)
    | description = "#{desc}"
    =newline
    | ==
    =newline + newline


//- twig info page
  Example:  +infopage('Title page','/','default',Custom description'})
  Compiled: title = "Demonstration"
            url = "/"
            layout = "default"
            description = ""
            ==
mixin infopage(title,url,layout,description)
    | title = "#{title}"
    =newline
    | url = "#{url}"
    =newline
    | layout = "#{layout}"
    =newline
    | description = "#{description}"
    =newline
    | ==
    =newline + newline


//- twig info page
  Example:  +inportfileinfo('title')
  Compiled: {{ this.page.title }}
mixin inportfileinfo(info)
    | {{ this.page.#{info} }}

//- twig partial
  Example:  +partial('home/base')
  Compiled: {% partial "home/base" %}
mixin partial(info)
    =newline
    | {% partial "#{info}" %}



//- twig yield
  Example:  +yield('pages')
  Compiled: {% placeholder pages %}
mixin yield(info)
    =newline
    =newline
    | {% placeholder #{info} %}
    =newline
    =newline

//- twig section
  Example:  +section('styles')
  Compiled: {% put content %}
mixin section(info)
    =newline
    =newline
    | {% put #{info} %}
    =newline
//- twig endsection
  Example:  +endsection()
  Compiled: {% endput %}
mixin endsection()
    =newline
    | {% endput %}
    =newline
    =newline

//- twig content
  Example:  +content('pages/home.htm')
  Compiled: {% content "pages/home.htm" %}
mixin content(info)
    =newline
    =newline
    | {% content "#{info}" %}
    =newline
    =newline
